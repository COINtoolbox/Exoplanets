require(arm)
# Poisson model for planet occurence
exo_dat<-read.table("../take_data/system_catalogue.dat",sep="\t",header=TRUE)
# select for now Period,  Planet radius, Planet mass
y<-exo_dat$n_planets
#x1<-exo_dat$star_temperature
x2<-exo_dat$star_radius
M1<-bayesglm(y~x2,family=poisson(link="log"))
display(M1)
exo_dat[1,]
x3<-exo_dat$star_temperature
M1<-bayesglm(y~x2+x3,family=poisson(link="log"))
display(M1)
coefplot(M1)
y
x2
x3
yweight <- predict(M1, list(wt = x2),type="response")
plot(x2, y, pch = 16, xlab="Stelar radius", ylab="Number of planets")
lines(x2, yweight)
plot(x3, y, pch = 16, xlab="Stelar radius", ylab="Number of planets")
lines(x3, yweight)
yweight <- predict(M1, list(wt = x3),type="response")
plot(x3, y, pch = 16, xlab="Stelar radius", ylab="Number of planets")
lines(x3, yweight)
ggplot(exo_dat,aex(x=star_radius,y=n_planets))+geom_point()
require(ggplot2)
ggplot(exo_dat,aex(x=star_radius,y=n_planets))+geom_point()
ggplot(exo_dat,aes(x=star_radius,y=n_planets))+geom_point()
ggplot(exo_dat,aes(x=star_temperature,y=n_planets))+geom_point()
exo_dat[1,]
ggplot(exo_dat,aes(x=star_mass,y=n_planets))+geom_point()
ggplot(exo_dat,aes(x=star_metallicity,y=n_planets))+geom_point()
exo_dat$n_hab_planets
library(VGAM)
vglm(n_planets~ star_radius+star_temperature+star_metallicity,genpoisson(zero=1),data=azpro)
vglm(n_planets~ star_radius+star_temperature+star_metallicity,genpoisson(zero=1),data=exo_dat)
fit<-vglm(n_planets~ star_radius+star_temperature+star_metallicity,genpoisson(zero=1),data=exo_dat)
fit
plot(fit)
predict(fit)
predict(fit)[1,]
predict(fit,type="response")
library(R2jags)
# Create model. Try a basic Poisson first.
# due to n=100, lots of variability in the model.
# I usually use n=10000 for my synthetic models.
x1 <- runif(1000)
x2 <- runif(1000)
eta <- 1 - 0.4 * x1 - 0.4 * x2
mu <- exp(eta)
y <- rpois(1000,lambda=mu)
poi <- glm(y ~ x1 + x2, family = poisson)
summary(poi)
X <- model.matrix(~ x1 + x2)
K <- ncol(X)
win.data1 <- list(
Y    = y,
N    = 1000,
X    = X,
bet0 = rep(0, K),          #Betas count
Bet0 = diag(0.0001, K),   #Betas count
Zeros   = rep(0, 1000)
)
win.data1
########
#Model
sink("GPGLM.txt")
cat("
model{
#Priors regression parameters
beta  ~ dmnorm(bet0[], Bet0[,])
#########
#Likelihood
C <- 10000
phi <- 0
for (i in 1:N) {
#Log likelihood function of Generalized Poisson via zero trick:
Zeros[i] ~ dpois(Zeros.mean[i])
Zeros.mean[i] <- -L[i] + C
l1[i] <- log(theta[i])
l2[i] <- (Y[i] - 1) * log(theta[i] + phi * Y[i])
l3[i] <- (theta[i] + phi * Y[i])
l4[i] <- loggam(Y[i] + 1)
L[i]  <-  l1[i] + l2[i] - l3[i] - l4[i]
theta[i] <- (1 - phi) * exp(eta[i])
eta[i]   <- inprod(X[i,], beta[])
z[i]     <- max(-1, -theta[i] / 4)  #Condition
# theta[i] + phi * Y[i] must be >0..else the log is Inf
zz[i]    <- -Y[i]/theta[i]
}
lb <- max(z[])
lb2 <- min(zz[])
#phi ~ dunif(lb, 0.9999)
}
",fill = TRUE)
sink()
#######
#Inits function
inits1  <- function () {
list(beta  = rnorm(K, 0, 0.01)#,  #Regression parameters
#phi   = 0
)  }
#Parameters to estimate
params1 <- c("beta",
#"phi"
"lb",
"lb2"
)
#Start Gibbs sampler
GP   <- jags(data       = win.data1,
inits      = inits1,
parameters = params1,
model      = "GPGLM.txt",
n.thin     = 10,
n.chains   = 3,
n.burnin   = 5000,
n.iter     = 10000)
summary(GP)
y<-exo_dat$n_planets
#x1<-exo_dat$star_temperature
x1<-exo_dat$star_radius
x2<-exo_dat$star_temperature
X <- model.matrix(~ x1 + x2)
K <- ncol(X)
N<-nrow(exo_dat)
win.data1 <- list(
Y    = y,
N    = N,
X    = X,
bet0 = rep(0, K),          #Betas count
Bet0 = diag(0.0001, K),   #Betas count
Zeros   = rep(0, N)
)
win.data1
########
#Model
sink("GPGLM.txt")
cat("
model{
#Priors regression parameters
beta  ~ dmnorm(bet0[], Bet0[,])
#########
#Likelihood
C <- 10000
phi <- 0
for (i in 1:N) {
#Log likelihood function of Generalized Poisson via zero trick:
Zeros[i] ~ dpois(Zeros.mean[i])
Zeros.mean[i] <- -L[i] + C
l1[i] <- log(theta[i])
l2[i] <- (Y[i] - 1) * log(theta[i] + phi * Y[i])
l3[i] <- (theta[i] + phi * Y[i])
l4[i] <- loggam(Y[i] + 1)
L[i]  <-  l1[i] + l2[i] - l3[i] - l4[i]
theta[i] <- (1 - phi) * exp(eta[i])
eta[i]   <- inprod(X[i,], beta[])
z[i]     <- max(-1, -theta[i] / 4)  #Condition
# theta[i] + phi * Y[i] must be >0..else the log is Inf
zz[i]    <- -Y[i]/theta[i]
}
lb <- max(z[])
lb2 <- min(zz[])
#phi ~ dunif(lb, 0.9999)
}
",fill = TRUE)
sink()
#######
#Inits function
inits1  <- function () {
list(beta  = rnorm(K, 0, 0.01)#,  #Regression parameters
#phi   = 0
)  }
#Parameters to estimate
params1 <- c("beta",
#"phi"
"lb",
"lb2"
)
#Start Gibbs sampler
GP   <- jags(data       = win.data1,
inits      = inits1,
parameters = params1,
model      = "GPGLM.txt",
n.thin     = 10,
n.chains   = 3,
n.burnin   = 5000,
n.iter     = 10000)
summary(GP)
N
X
model.matrix(~ x1 + x2)
model.matrix(~ x1 + x2)[1,]
x1 <- runif(1000)
x2 <- runif(1000)
model.matrix(~ x1 + x2)
library(R2jags)
# Data
exo_dat<-read.table("../take_data/system_catalogue.dat",sep="\t",header=TRUE)
# select for now Period,  Planet radius, Planet mass
y<-exo_dat$n_planets
#x1<-exo_dat$star_temperature
x1<-exo_dat$star_radius
x2<-exo_dat$star_temperature
X <- model.matrix(~ x1 + x2)
K <- ncol(X)
N<-nrow(exo_dat)
win.data1 <- list(
Y    = y,
N    = N,
X    = X,
bet0 = rep(0, K),          #Betas count
Bet0 = diag(0.0001, K),   #Betas count
Zeros   = rep(0, N)
)
win.data1
GP   <- jags(data       = win.data1,
inits      = inits1,
parameters = params1,
model      = "GPGLM.txt",
n.thin     = 10,
n.chains   = 3,
n.burnin   = 5000,
n.iter     = 10000)
summary(GP)
X[943,1:3]
X
X[943,]
X[1,]
X[10,]
X[100,]
X[900,]
X[945,]
X[943,]
model.matrix(~ x1 + x2)
model.matrix(~ x1 + x2)[942,]
model.matrix(~ x1 + x2)[943,]
model.matrix(~ x1 + x2)[944,]
x1[942]
x1[943]
x2[943]
x2[942]
model.matrix(~ x1 + x2)[942,]
model.matrix(~ x1 + x2)[950,]
dim(model.matrix(~x1 + x2))
dim(model.matrix(~ x1 + x2))
dim(model.matrix(~1+x1 + x2))
dim(model.matrix(x1 + x2))
dim(model.matrix(~x1 + x2))
dim(x1)
dim(x1+x2)
length(x1)
length(x2)
x1 <- runif(1000)
x2 <- runif(1000)
dim(model.matrix(~ x1 + x2))
x1<-exo_dat$star_radius
x2<-exo_dat$star_temperature
x1 <- runif(1000)
x2 <- runif(1000)
x1<-exo_dat$star_radius
x2<-exo_dat$star_temperature
X <- model.matrix(~x1 + x2)
x1 <- runif(1000)
x2 <- runif(1000)
X <- model.matrix(~ x1 + x2)
exo_dat$star_radius[943]
exo_dat$star_radius[950]
exo_dat$star_radius[1000]
exo_dat$star_temperature[1000]
exo_dat$star_temperature[943]
setwd("~/Dropbox/artigos/Meusartigos/IAA-WGC/Github/Exoplanets/scripts")
library(R2jags)
# Data
exo_dat<-read.table("../take_data/system_catalogue.dat",sep="\t",header=TRUE)
# select for now Period,  Planet radius, Planet mass
y<-exo_dat$n_planets
#x1<-exo_dat$star_temperature
x1<-exo_dat$star_radius
x2<-exo_dat$star_temperature
X <- model.matrix(~x1 + x2)
model.matrix(~x2 + x1)
x1<-as.data.frame(exo_dat$star_radius)
x2<-as.data.frame(exo_dat$star_temperature)
X <- model.matrix(~x1 + x2)
x2
x1<-exo_dat$star_radius
x2<-exo_dat$star_temperature
X <- model.matrix(~x1 + x2)
K <- ncol(X)
X[1,]
N<-942
win.data1 <- list(
Y    = y,
N    = N,
X    = X,
bet0 = rep(0, K),          #Betas count
Bet0 = diag(0.0001, K),   #Betas count
Zeros   = rep(0, N)
)
win.data1
########
#Model
sink("GPGLM.txt")
cat("
model{
#Priors regression parameters
beta  ~ dmnorm(bet0[], Bet0[,])
#########
#Likelihood
C <- 10000
phi <- 0
for (i in 1:N) {
#Log likelihood function of Generalized Poisson via zero trick:
Zeros[i] ~ dpois(Zeros.mean[i])
Zeros.mean[i] <- -L[i] + C
l1[i] <- log(theta[i])
l2[i] <- (Y[i] - 1) * log(theta[i] + phi * Y[i])
l3[i] <- (theta[i] + phi * Y[i])
l4[i] <- loggam(Y[i] + 1)
L[i]  <-  l1[i] + l2[i] - l3[i] - l4[i]
theta[i] <- (1 - phi) * exp(eta[i])
eta[i]   <- inprod(X[i,], beta[])
z[i]     <- max(-1, -theta[i] / 4)  #Condition
# theta[i] + phi * Y[i] must be >0..else the log is Inf
zz[i]    <- -Y[i]/theta[i]
}
lb <- max(z[])
lb2 <- min(zz[])
#phi ~ dunif(lb, 0.9999)
}
",fill = TRUE)
sink()
#######
#Inits function
inits1  <- function () {
list(beta  = rnorm(K, 0, 0.01)#,  #Regression parameters
#phi   = 0
)  }
#Parameters to estimate
params1 <- c("beta",
#"phi"
"lb",
"lb2"
)
#Start Gibbs sampler
GP   <- jags(data       = win.data1,
inits      = inits1,
parameters = params1,
model      = "GPGLM.txt",
n.thin     = 10,
n.chains   = 3,
n.burnin   = 5000,
n.iter     = 10000)
summary(GP)
x1<-exo_dat$star_radius
x2<-exo_dat$star_metallicity
X <- model.matrix(~x1 + x2)
exo_dat[complete.cases(exo_dat),]
exo_dat[complete.cases(exo_dat[,c("n_planets","star_radius","star_metallicity")]),]
exo_dat<-exo_dat[complete.cases(exo_dat[,c("n_planets","star_radius","star_metallicity")]),]
y<-exo_dat$n_planets
#x1<-exo_dat$star_temperature
x1<-exo_dat$star_radius
x2<-exo_dat$star_metallicity
X <- model.matrix(~x1 + x2)
K <- ncol(X)
N<-nrow(exo_dat)
win.data1 <- list(
Y    = y,
N    = N,
X    = X,
bet0 = rep(0, K),          #Betas count
Bet0 = diag(0.0001, K),   #Betas count
Zeros   = rep(0, N)
)
win.data1
########
#Model
sink("GPGLM.txt")
cat("
model{
#Priors regression parameters
beta  ~ dmnorm(bet0[], Bet0[,])
#########
#Likelihood
C <- 10000
phi <- 0
for (i in 1:N) {
#Log likelihood function of Generalized Poisson via zero trick:
Zeros[i] ~ dpois(Zeros.mean[i])
Zeros.mean[i] <- -L[i] + C
l1[i] <- log(theta[i])
l2[i] <- (Y[i] - 1) * log(theta[i] + phi * Y[i])
l3[i] <- (theta[i] + phi * Y[i])
l4[i] <- loggam(Y[i] + 1)
L[i]  <-  l1[i] + l2[i] - l3[i] - l4[i]
theta[i] <- (1 - phi) * exp(eta[i])
eta[i]   <- inprod(X[i,], beta[])
z[i]     <- max(-1, -theta[i] / 4)  #Condition
# theta[i] + phi * Y[i] must be >0..else the log is Inf
zz[i]    <- -Y[i]/theta[i]
}
lb <- max(z[])
lb2 <- min(zz[])
#phi ~ dunif(lb, 0.9999)
}
",fill = TRUE)
sink()
#######
#Inits function
inits1  <- function () {
list(beta  = rnorm(K, 0, 0.01)#,  #Regression parameters
#phi   = 0
)  }
#Parameters to estimate
params1 <- c("beta",
#"phi"
"lb",
"lb2"
)
#Start Gibbs sampler
GP   <- jags(data       = win.data1,
inits      = inits1,
parameters = params1,
model      = "GPGLM.txt",
n.thin     = 10,
n.chains   = 3,
n.burnin   = 5000,
n.iter     = 10000)
summary(GP)
GP
